# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: S3 File Uploader

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, windows-latest]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
      
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
        
    - name: Install py2app on Mac
      if: matrix.os == 'macos-10.15'
      run: |
        python -m pip install py2app
    
    - name: Build app
      run: |
        if [ -f setup.py ]; then python setup.py clean --full-clean create; else echo "There is no setup.py file."; fi
    
    - name: Distribute created executables
      run: |
        if [ -f setup.py ]; then python setup.py distribute; else echo "There is no setup.py file."; fi
    
#     - name: Check if executables were created succesfully
    - name: Check file structure
      run: |
        pwd
        ls -l
        ls -l distribution
    
    - name: Check if executables were actually created Windows
      if: matrix.os == 'windows-latest'
      run: |
        if ! [ -f $WINDOWS_MSI_FILE_NAME ]; then exit 1; fi
        if ! [ -f $WINDOWS_ZIP_FILE_NAME ]; then exit 1; fi
      env:
        WINDOWS_MSI_FILE_NAME: "distribution/S3_File_Uploader-0.4-windows_amd64.msi"
        WINDOWS_ZIP_FILE_NAME: "distribution/S3_File_Uploader-0.4-windows_amd64.zip"
      
    - name: Check if executables were actually created Mac
      if: matrix.os == 'macos-10.15'
      run: |
        if ! [ -f $MAC_DMG_FILE_NAME ]; then exit 1; fi
        if ! [ -d $MAC_APP_FILE_NAME ]; then exit 1; fi
      env:
        MAC_APP_FILE_NAME: "distribution/S3\ File\ Uploader.app"
        MAC_DMG_FILE_NAME: "distribution/S3\ File\ Uploader\ Installer.dmg"
